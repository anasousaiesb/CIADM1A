import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st
import os
import numpy as np
from matplotlib.cm import get_cmap # Not directly used in the final version but good to keep if styling changes

# --- Configura√ß√µes Iniciais e Estilo da P√°gina ---
st.set_page_config(
    layout="wide",
    page_title="An√°lise Clim√°tica Brasil: 2020 vs. 2024",
    page_icon="üåç"
)

# T√≠tulo Principal da Aplica√ß√£o
st.title("üåç Contrastando o Clima: Padr√µes de Temperatura e Precipita√ß√£o entre 2020 e 2024 no Brasil")

st.markdown("""
Uma imers√£o visual nos dados clim√°ticos brasileiros, revelando as din√¢micas de temperatura e precipita√ß√£o
entre os anos de 2020 e 2024. Explore como as condi√ß√µes clim√°ticas variaram em diferentes regi√µes do pa√≠s.
""")

# Caminho relativo ao arquivo CSV
# Certifique-se de que o arquivo 'medias_mensais_geo_2020_2025.csv'
# esteja localizado dentro de uma pasta 'medias' no mesmo diret√≥rio da sua aplica√ß√£o Streamlit.
caminho_arquivo_unificado = os.path.join("medias", "medias_mensais_geo_2020_2025.csv")

# --- Fun√ß√£o para Carregar e Preparar os Dados ---
@st.cache_data
def carregar_dados(caminho: str) -> pd.DataFrame:
    """
    Carrega e processa o arquivo de dados clim√°ticos CSV.
    Realiza o c√°lculo da temperatura m√©dia se as colunas de m√°xima e m√≠nima estiverem presentes,
    e garante que as colunas essenciais estejam no DataFrame.

    Args:
        caminho (str): O caminho para o arquivo CSV de dados clim√°ticos.

    Returns:
        pd.DataFrame: O DataFrame processado com os dados clim√°ticos.

    Raises:
        st.error: Interrompe a execu√ß√£o do Streamlit se colunas cr√≠ticas estiverem faltando.
    """
    try:
        df = pd.read_csv(caminho)
    except FileNotFoundError:
        st.error(f"Erro Cr√≠tico: O arquivo '{caminho}' n√£o foi encontrado. Verifique o caminho e a localiza√ß√£o do arquivo.")
        st.stop()
    except Exception as e:
        st.error(f"Erro ao carregar o arquivo CSV: {e}")
        st.stop()

    # Calcula a Temp_Media se as colunas de max/min existirem
    if 'TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)' in df.columns and \
       'TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)' in df.columns:
        df['Temp_Media'] = (df['TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)'] +
                            df['TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)']) / 2
    elif 'Temp_Media' not in df.columns:
        # Se Temp_Media n√£o existe e n√£o p√¥de ser calculada, levanta um erro cr√≠tico.
        st.error("Erro Cr√≠tico: A coluna 'Temp_Media' n√£o existe e n√£o p√¥de ser calculada a partir das colunas de m√°xima e m√≠nima. Verifique o seu arquivo CSV.")
        st.stop()

    # Converte colunas essenciais para num√©rico, tratando erros com 'coerce'
    df['M√™s'] = pd.to_numeric(df['M√™s'], errors='coerce')
    df['Ano'] = pd.to_numeric(df['Ano'], errors='coerce')

    # Garante que as colunas necess√°rias para a an√°lise existem
    required_cols = ['Temp_Media', 'PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)', 'Regiao', 'M√™s', 'Ano']
    for col in required_cols:
        if col not in df.columns:
            st.error(f"Erro Cr√≠tico: A coluna '{col}' n√£o foi encontrada no arquivo CSV. Verifique seu arquivo.")
            st.stop()

    # Remove linhas com valores nulos nas colunas cr√≠ticas ap√≥s a convers√£o
    df = df.dropna(subset=required_cols)
    return df

# --- Carregamento dos Dados e Tratamento de Erros Iniciais ---
df_unificado = carregar_dados(caminho_arquivo_unificado)

# --- Interface do Usu√°rio na Barra Lateral ---
st.sidebar.header("‚öôÔ∏è Op√ß√µes de An√°lise")

# Obter lista √∫nica de regi√µes para o selectbox, ordenadas alfabeticamente
regioes = sorted(df_unificado['Regiao'].unique())

# Sele√ß√£o de Regi√£o
regiao_selecionada = st.sidebar.selectbox(
    "Selecione a Regi√£o para Compara√ß√£o:",
    regioes,
    help="Escolha uma regi√£o para visualizar o comparativo clim√°tico entre 2020 e 2024."
)

st.sidebar.markdown("---")
st.sidebar.info("‚ú® Dados fornecidos para a compara√ß√£o de padr√µes clim√°ticos anuais no Brasil.")

# --- Se√ß√£o Principal da Aplica√ß√£o ---
st.subheader(f"üìä Comparativo Clim√°tico Detalhado: 2020 vs. 2024 na Regi√£o {regiao_selecionada}")
st.markdown("""
Esta se√ß√£o apresenta uma an√°lise lado a lado dos padr√µes de **Temperatura M√©dia** e **Precipita√ß√£o Total**
para a regi√£o selecionada, contrastando os dados de **2020** com os de **2024**. As diferen√ßas observadas
podem indicar tend√™ncias clim√°ticas, a influ√™ncia de eventos anuais espec√≠ficos ou a variabilidade natural do clima local.
""")

# Filtrar dados para a regi√£o selecionada e os anos 2020 e 2024
df_regiao = df_unificado[df_unificado['Regiao'] == regiao_selecionada]

# Agrupar e reindexar dados por m√™s para 2020 e 2024
# Garante que todos os 12 meses est√£o presentes, mesmo que com NaN se n√£o houver dados.
df_2020 = df_regiao[df_regiao['Ano'] == 2020].groupby('M√™s').agg({
    'Temp_Media': 'mean',
    'PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)': 'sum'
}).reindex(range(1, 13))

df_2024 = df_regiao[df_regiao['Ano'] == 2024].groupby('M√™s').agg({
    'Temp_Media': 'mean',
    'PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)': 'sum'
}).reindex(range(1, 13))

# Remover meses onde n√£o h√° dados para ambos os anos na compara√ß√£o de gr√°ficos
df_2020_comp = df_2020.dropna()
df_2024_comp = df_2024.dropna()

if df_2020_comp.empty or df_2024_comp.empty:
    st.warning(f"Dados incompletos para 2020 ou 2024 na Regi√£o {regiao_selecionada}. N√£o √© poss√≠vel realizar a compara√ß√£o completa.")
    # N√£o st.stop() aqui para permitir que a explica√ß√£o continue, mas o gr√°fico n√£o ser√° gerado
else:
    # Mapeamento de n√∫meros de m√™s para nomes abreviados
    nomes_meses = {
        1: 'Jan', 2: 'Fev', 3: 'Mar', 4: 'Abr', 5: 'Mai', 6: 'Jun',
        7: 'Jul', 8: 'Ago', 9: 'Set', 10: 'Out', 11: 'Nov', 12: 'Dez'
    }

    # Layout de colunas para os gr√°ficos
    col1, col2 = st.columns(2)

    with col1:
        # --- GR√ÅFICO DE TEMPERATURA M√âDIA ---
        fig_temp, ax_temp = plt.subplots(figsize=(10, 6))

        ax_temp.plot(df_2020_comp.index, df_2020_comp['Temp_Media'], marker='o', linestyle='-',
                     color='purple', label='Temperatura M√©dia 2020', linewidth=2, markersize=7)
        ax_temp.plot(df_2024_comp.index, df_2024_comp['Temp_Media'], marker='o', linestyle='--',
                     color='orange', label='Temperatura M√©dia 2024', linewidth=2, markersize=7)

        ax_temp.set_title(f'Varia√ß√£o da Temperatura M√©dia Mensal\nRegi√£o: {regiao_selecionada}', fontsize=16, fontweight='bold')
        ax_temp.set_xlabel('M√™s', fontsize=12)
        ax_temp.set_ylabel('Temperatura M√©dia (¬∞C)', fontsize=12)
        ax_temp.set_xticks(range(1, 13))
        ax_temp.set_xticklabels([nomes_meses.get(m, str(m)) for m in range(1, 13)])
        ax_temp.grid(True, linestyle=':', alpha=0.7)
        ax_temp.legend(fontsize=10, loc='best')
        plt.tight_layout()
        st.pyplot(fig_temp)

    with col2:
        # --- GR√ÅFICO DE PRECIPITA√á√ÉO TOTAL ---
        fig_prec, ax_prec = plt.subplots(figsize=(10, 6))

        # Ajusta a posi√ß√£o das barras para ficarem lado a lado
        bar_width = 0.4
        ax_prec.bar(df_2020_comp.index - bar_width/2, df_2020_comp['PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)'],
                    width=bar_width, color='darkgreen', label='Precipita√ß√£o 2020', alpha=0.8)
        ax_prec.bar(df_2024_comp.index + bar_width/2, df_2024_comp['PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)'],
                    width=bar_width, color='skyblue', label='Precipita√ß√£o 2024', alpha=0.8)

        ax_prec.set_title(f'Volume Total de Precipita√ß√£o Mensal\nRegi√£o: {regiao_selecionada}', fontsize=16, fontweight='bold')
        ax_prec.set_xlabel('M√™s', fontsize=12)
        ax_prec.set_ylabel('Precipita√ß√£o Total (mm)', fontsize=12)
        ax_prec.set_xticks(range(1, 13))
        ax_prec.set_xticklabels([nomes_meses.get(m, str(m)) for m in range(1, 13)])
        ax_prec.grid(axis='y', linestyle=':', alpha=0.7)
        ax_prec.legend(fontsize=10, loc='best')
        plt.tight_layout()
        st.pyplot(fig_prec)

st.markdown("---")

# --- AN√ÅLISE PROFUNDA E JUSTIFICATIVA ---
st.header(f"üîç 2020 vs. 2024 na Regi√£o {regiao_selecionada}: Eventos Clim√°ticos ou Variabilidade Natural?")
st.markdown(f"""
Ao confrontar os padr√µes clim√°ticos de **2020** e **2024** para a **Regi√£o {regiao_selecionada}**,
podemos extrair insights cruciais sobre a natureza do clima local. As diferen√ßas vis√≠veis nos gr√°ficos
acima podem ser mais do que meras flutua√ß√µes anuais; elas podem sinalizar a influ√™ncia de eventos clim√°ticos
espec√≠ficos ou, alternativamente, a manifesta√ß√£o de uma alta variabilidade intr√≠nseca √† regi√£o.

---

### üå°Ô∏è An√°lise da Temperatura M√©dia:
Observe as linhas que representam a temperatura m√©dia mensal.

* **Tend√™ncia Anual:** Se a linha de **2024** se mant√©m consistentemente acima (ou abaixo) da de **2020** por
    v√°rios meses, especialmente em esta√ß√µes-chave, isso pode indicar uma **tend√™ncia de aquecimento ou
    resfriamento anual** mais acentuada. Isso pode ser um reflexo de tend√™ncias clim√°ticas de longo prazo
    ou a influ√™ncia de fen√¥menos de grande escala, como fases intensas do El Ni√±o/La Ni√±a.
* **Eventos Extremos de Calor/Frio:** Picos ou vales acentuados em meses espec√≠ficos de um ano, sem uma
    correspond√™ncia similar no outro, podem indicar a ocorr√™ncia de **ondas de calor ou frio pontuais**.
    Estes s√£o eventos clim√°ticos de alto impacto que merecem aten√ß√£o especial.

---

### ‚òî An√°lise da Precipita√ß√£o Total:
A compara√ß√£o das barras de precipita√ß√£o √© igualmente reveladora para entender os regimes h√≠dricos.

* **Secas ou Chuvas Intensas:** Um ano com volumes de precipita√ß√£o drasticamente menores ou maiores que
    o outro (especialmente durante a esta√ß√£o chuvosa caracter√≠stica da regi√£o) sugere a ocorr√™ncia de
    **secas prolongadas ou per√≠odos de chuvas torrenciais**. Tais eventos s√£o extremos e podem ter
    consequ√™ncias severas para a agricultura, recursos h√≠dricos e cidades.
* **Mudan√ßa na Sazonalidade:** Se os picos de chuva ocorreram em meses diferentes, ou se a distribui√ß√£o
    das chuvas mudou significativamente (por exemplo, um ano com chuva mais concentrada em poucos meses,
    outro mais dispersa ao longo do ano), isso aponta para uma **altera√ß√£o nos padr√µes sazonais**.
    Esta √© uma indica√ß√£o clara de alta variabilidade clim√°tica.

---

### üßê Conclus√£o: Eventos Clim√°ticos ou Alta Variabilidade?
* **Impacto de Eventos Clim√°ticos:** Se voc√™ observar diferen√ßas **abruptas e marcantes** em um ou mais meses,
    ou um padr√£o de temperaturas ou precipita√ß√µes consistentemente mais altas/baixas em um ano em
    compara√ß√£o ao outro, isso **sugere fortemente a influ√™ncia de um evento clim√°tico espec√≠fico** naquele per√≠odo.
    Estes podem incluir fen√¥menos como El Ni√±o/La Ni√±a, bloqueios atmosf√©ricos, ou a passagem de sistemas cicl√¥nicos.
* **Alta Variabilidade Natural:** Por outro lado, se as diferen√ßas s√£o **menos consistentes**, com um ano
    sendo mais quente em alguns meses e mais frio em outros, ou com varia√ß√µes de precipita√ß√£o que n√£o
    formam um padr√£o claro de seca/enchente generalizada, isso pode indicar uma **alta variabilidade
    clim√°tica intr√≠nseca √† regi√£o**. Esta variabilidade exige adaptabilidade cont√≠nua por parte de
    diversos setores, como o agr√≠cola e de infraestrutura.

Ao analisar cuidadosamente os gr√°ficos e as informa√ß√µes acima, voc√™ pode inferir se a **Regi√£o {regiao_selecionada}**
vivenciou anomalias clim√°ticas pontuais em 2020 ou 2024, ou se a sua variabilidade natural foi particularmente acentuada nesses anos.
""")

# --- Rodap√© ou Informa√ß√µes Adicionais (Opcional) ---
st.markdown("---")
st.markdown("""
<div style='text-align: center; font-size: small; color: gray;'>
    Dados baseados em informa√ß√µes meteorol√≥gicas hist√≥ricas.
    Desenvolvido para an√°lise comparativa de padr√µes clim√°ticos.
</div>
""", unsafe_allow_html=True)

# Lembre-se: Para rodar este c√≥digo, voc√™ precisa ter o Streamlit instalado
# (`pip install streamlit pandas matplotlib`) e salvar o c√≥digo como um arquivo `.py`
# (ex: `app_clima.py`). Coloque o arquivo `medias_mensais_geo_2020_2025.csv`
# dentro de uma pasta `medias` no mesmo diret√≥rio da aplica√ß√£o.
# Em seguida, execute no terminal: `streamlit run app_clima.py`
