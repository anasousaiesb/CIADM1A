import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st
import os
import numpy as np
from matplotlib.cm import get_cmap

# --- CONFIGURA√á√ïES INICIAIS DA P√ÅGINA ---
st.set_page_config(layout="wide", page_title="An√°lise de Extremos Clim√°ticos üö®")

# --- CSS PARA ESTILIZA√á√ÉO APRIMORADA (Aplicado globalmente para ambos os temas) ---
st.markdown("""
<style>
/* Estilos para o tema de "An√°lise Clim√°tica Interativa" */
.stApp {
    background-color: #f0f2f5; /* Fundo cinza claro */
    color: #2C3E50; /* Cor de texto principal */
}
.main-title-1 { /* T√≠tulo principal do primeiro app */
    font-size: 3.2em;
    font-weight: 700;
    color: #34495E; /* Azul escuro */
    text-align: center;
    margin-bottom: 0.5em;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
}
.subtitle-1 { /* Subt√≠tulo do primeiro app */
    font-size: 1.6em;
    color: #7F8C8D; /* Cinza m√©dio */
    text-align: center;
    margin-top: -0.5em;
    margin-bottom: 1.5em;
}
.header-section-1 { /* Se√ß√£o do cabe√ßalho do primeiro app */
    background: linear-gradient(135deg, #A8DADC 0%, #457B9D 100%); /* Gradiente azul claro */
    padding: 1.8em;
    border-radius: 12px;
    margin-bottom: 2em;
    box-shadow: 0 6px 15px rgba(0,0,0,0.1);
    border: 1px solid #1D3557;
}

/* Estilos para o tema de "An√°lise de Extremos Clim√°ticos" */
.main-title-2 { /* T√≠tulo principal do segundo app (extremos) */
    font-size: 3.2em;
    font-weight: 700;
    color: #CC0000; /* Vermelho forte para extremos */
    text-align: center;
    margin-bottom: 0.5em;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
}
.subtitle-2 { /* Subt√≠tulo do segundo app (extremos) */
    font-size: 1.6em;
    color: #E65100; /* Laranja escuro */
    text-align: center;
    margin-top: -0.5em;
    margin-bottom: 1.5em;
}
.header-section-2 { /* Se√ß√£o do cabe√ßalho do segundo app (extremos) */
    background: linear-gradient(135deg, #FFD180 0%, #FFAB40 100%); /* Gradiente de laranja */
    padding: 1.8em;
    border-radius: 12px;
    margin-bottom: 2em;
    box-shadow: 0 6px 15px rgba(0,0,0,0.1);
    border: 1px solid #FF8F00;
}

/* Estilo geral para cabe√ßalhos de se√ß√£o */
h2 {
    color: #34495E; /* Cor para subt√≠tulos h2 */
    font-weight: 600;
}
</style>
""", unsafe_allow_html=True)

# Caminho relativo ao arquivo CSV
caminho_arquivo_unificado = os.path.join("medias", "medias_mensais_geo_2020_2025.csv")

# --- FUN√á√ÉO PARA CARREGAR E PREPARAR OS DADOS (com caching) ---
@st.cache_data
def carregar_dados(caminho):
    """Carrega e processa o arquivo de dados clim√°ticos."""
    df = pd.read_csv(caminho)

    # Converte colunas para num√©rico, tratando erros
    for col in ['M√™s', 'Ano', 'PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)',
                'TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)',
                'TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)',
                'VENTO, RAJADA MAXIMA (m/s)']:
        if col in df.columns:
            df[col] = pd.to_numeric(df[col], errors='coerce')
    
    df = df.dropna(subset=['M√™s', 'Ano']) # Garante que M√™s e Ano n√£o s√£o nulos
    return df

# --- CARREGAMENTO DOS DADOS E TRATAMENTO DE ERROS ---
try:
    df_unificado = carregar_dados(caminho_arquivo_unificado)

    # --- T√çTULO PRINCIPAL E SUBT√çTULO COM EMOJIS E NOVO ESTILO ---
    st.markdown('<div class="header-section-2">', unsafe_allow_html=True) # Usando a classe do segundo tema
    st.markdown('<h1 class="main-title-2">An√°lise de Extremos Clim√°ticos Regionais do Brasil üö®‚ö†Ô∏è</h1>', unsafe_allow_html=True)
    st.markdown('<p class="subtitle-2">Explorando Picos e Vales nos Dados Clim√°ticos (2020-2025) üå°Ô∏èüí®üåßÔ∏è</p>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)

    st.markdown("""
    Desvende os recordes e as condi√ß√µes mais severas registradas em diversas regi√µes do Brasil!
    Esta ferramenta permite identificar os **maiores valores** de temperatura, precipita√ß√£o e rajadas de vento,
    al√©m das **menores temperaturas**, oferecendo um panorama das condi√ß√µes clim√°ticas mais extremas.
    """)

    # --- INTERFACE DO USU√ÅRIO ---
    st.sidebar.header("Filtros de An√°lise ‚öôÔ∏è")
    
    regioes = sorted(df_unificado['Regiao'].unique())
    anos = sorted(df_unificado['Ano'].unique())

    # Dropdown para selecionar a vari√°vel de extremo
    variaveis_extremo = {
        'Temperatura M√°xima (¬∞C)': 'TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)',
        'Temperatura M√≠nima (¬∞C)': 'TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)',
        'Precipita√ß√£o Total (mm)': 'PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)',
        'Rajada M√°xima de Vento (m/s)': 'VENTO, RAJADA MAXIMA (m/s)'
    }
    nome_var_extremo = st.sidebar.selectbox("Selecione a Vari√°vel de Extremo:", list(variaveis_extremo.keys()))
    coluna_var_extremo = variaveis_extremo[nome_var_extremo]
    
    # Verifica se a coluna selecionada realmente existe no DataFrame
    if coluna_var_extremo not in df_unificado.columns:
        st.error(f"‚ùå **Erro:** A coluna '{coluna_var_extremo}' para a vari√°vel '{nome_var_extremo}' n√£o foi encontrada no seu arquivo CSV. Por favor, verifique se os nomes das colunas est√£o corretos. üõë")
        st.stop()

    unidade_var_extremo = nome_var_extremo.split('(')[-1].replace(')', '') if '(' in nome_var_extremo else ''

    # Slider para selecionar os anos
    ano_inicio, ano_fim = st.sidebar.select_slider(
        "Selecione o Intervalo de Anos:",
        options=anos.astype(int), # Garante que os anos s√£o inteiros para o slider
        value=(int(min(anos)), int(max(anos)))
    )
    df_filtrado_ano = df_unificado[(df_unificado['Ano'] >= ano_inicio) & (df_unificado['Ano'] <= ano_fim)]

    st.markdown("---")

    # --- AN√ÅLISE DE EXTREMOS CLIM√ÅTICOS POR REGI√ÉO ---
    st.header(f"Recordes de {nome_var_extremo} por Regi√£o ({ano_inicio}-{ano_fim}) üìà")
    st.write(f"""
    Esta tabela revela os **valores mais extremos** (m√°ximos ou m√≠nimos, dependendo da vari√°vel) registrados para **{nome_var_extremo.lower()}** em cada regi√£o, dentro do per√≠odo de **{ano_inicio} a {ano_fim}**.
    Explore para identificar as regi√µes que experimentaram as condi√ß√µes mais desafiadoras!
    """)

    # Agrupando por regi√£o para encontrar os valores extremos
    if "M√≠nima" in nome_var_extremo: # Para temperatura m√≠nima, queremos o menor valor
        df_extremos_regionais = df_filtrado_ano.groupby('Regiao')[coluna_var_extremo].min().reset_index()
        # Ordenar para mostrar o menor valor primeiro para "M√≠nima"
        df_extremos_regionais = df_extremos_regionais.sort_values(by=f'{coluna_var_extremo}', ascending=True)
    else: # Para as outras vari√°veis, queremos o maior valor
        df_extremos_regionais = df_filtrado_ano.groupby('Regiao')[coluna_var_extremo].max().reset_index()
        # Ordenar para mostrar o maior valor primeiro
        df_extremos_regionais = df_extremos_regionais.sort_values(by=f'{coluna_var_extremo}', ascending=False)


    if not df_extremos_regionais.empty:
        # Renomeando a coluna para melhor exibi√ß√£o
        df_extremos_regionais.rename(columns={coluna_var_extremo: f'{nome_var_extremo} Extremo'}, inplace=True)
        
        st.dataframe(df_extremos_regionais.set_index('Regiao').style.format("{:.2f}").highlight_max(axis=0, color='lightcoral').highlight_min(axis=0, color='lightblue'))

        # Gr√°fico de barras para os extremos
        fig_extremo, ax_extremo = plt.subplots(figsize=(12, 6))
        
        # Cores din√¢micas baseadas na vari√°vel
        if "Temperatura M√°xima" in nome_var_extremo:
            bar_color = '#E74C3C' # Vermelho para calor extremo
        elif "Temperatura M√≠nima" in nome_var_extremo:
            bar_color = '#3498DB' # Azul para frio extremo
        elif "Precipita√ß√£o Total" in nome_var_extremo:
            bar_color = '#2ECC71' # Verde para chuva
        elif "Rajada M√°xima de Vento" in nome_var_extremo:
            bar_color = '#9B59B6' # Roxo para vento
        else:
            bar_color = '#FF7043' # Cor padr√£o

        ax_extremo.bar(df_extremos_regionais['Regiao'], df_extremos_regionais[f'{nome_var_extremo} Extremo'], color=bar_color, alpha=0.9)
        ax_extremo.set_title(f'{nome_var_extremo} Extremo por Regi√£o', fontsize=18, fontweight='bold', color='#34495E')
        ax_extremo.set_xlabel('Regi√£o', fontsize=14, color='#34495E')
        ax_extremo.set_ylabel(f'{nome_var_extremo} ({unidade_var_extremo})', fontsize=14, color='#34495E')
        ax_extremo.tick_params(axis='x', rotation=45, labelsize=10)
        ax_extremo.tick_params(axis='y', labelsize=10)
        ax_extremo.grid(axis='y', linestyle='--', alpha=0.7, color='#BDC3C7')
        ax_extremo.set_facecolor('#F8F9FA') # Fundo do gr√°fico
        plt.tight_layout()
        st.pyplot(fig_extremo)

        st.markdown("---")

        st.header("Insights e Potenciais Impactos dos Extremos Clim√°ticos ü§î")
        st.warning("üö® **Importante:** As an√°lises e hip√≥teses abaixo s√£o baseadas nos dados dispon√≠veis para o per√≠odo de 2020-2025. Para uma compreens√£o completa das tend√™ncias e impactos das mudan√ßas clim√°ticas, estudos com s√©ries hist√≥ricas mais longas e modelagem clim√°tica s√£o essenciais.")

        # Gerando insights din√¢micos
        if not df_extremos_regionais.empty:
            # Pega a primeira linha da tabela j√° ordenada para o "extremo" principal
            extremo_data = df_extremos_regionais.iloc[0]
            regiao_extremo = extremo_data['Regiao']
            valor_extremo = extremo_data[f'{nome_var_extremo} Extremo']
            
            if "Temperatura M√°xima" in nome_var_extremo:
                st.markdown(f"""
                ### O Calor no Topo! ‚òÄÔ∏è
                A Regi√£o de **{regiao_extremo}** registrou a **temperatura m√°xima mais alta** ({valor_extremo:.2f} {unidade_var_extremo}) no per√≠odo selecionado.
                * **Impacto Potencial:** Este dado acende um alerta para **ondas de calor mais frequentes e intensas**. Isso pode sobrecarregar sistemas de sa√∫de, aumentar a demanda por energia (ar-condicionado) e impactar a produtividade agr√≠cola e urbana.
                * **Consequ√™ncia:** Cidades e √°reas rurais podem precisar de estrat√©gias de mitiga√ß√£o do calor, como aumento de √°reas verdes e infraestrutura mais resiliente.
                """)
            elif "Temperatura M√≠nima" in nome_var_extremo:
                st.markdown(f"""
                ### O Frio que Surpreende! ‚ùÑÔ∏è
                A Regi√£o de **{regiao_extremo}** alcan√ßou a **temperatura m√≠nima mais baixa** ({valor_extremo:.2f} {unidade_var_extremo}) no per√≠odo.
                * **Impacto Potencial:** Per√≠odos de frio intenso podem levar a **perdas agr√≠colas por geadas**, aumento do consumo de energia para aquecimento e riscos √† sa√∫de de popula√ß√µes vulner√°veis.
                * **Consequ√™ncia:** A aten√ß√£o deve se voltar para a prote√ß√£o de lavouras sens√≠veis e a garantia de aquecimento adequado em comunidades afetadas.
                """)
            elif "Precipita√ß√£o Total" in nome_var_extremo:
                st.markdown(f"""
                ### Chuva Intensa: Alerta M√°ximo! üíß
                A Regi√£o de **{regiao_extremo}** acumulou o **maior volume de precipita√ß√£o** ({valor_extremo:.2f} {unidade_var_extremo}) em um m√™s no per√≠odo.
                * **Impacto Potencial:** volumes extremos de chuva aumentam drasticamente o risco de **inunda√ß√µes, deslizamentos de terra** e transbordamento de rios, afetando infraestrutura e vidas.
                * **Consequ√™ncia:** √â crucial refor√ßar o planejamento urbano, sistemas de drenagem e alertas precoces √† popula√ß√£o em √°reas de risco.
                """)
            elif "Rajada M√°xima de Vento" in nome_var_extremo:
                st.markdown(f"""
                ### Ventos Fortes: For√ßa da Natureza! üå¨Ô∏è
                A Regi√£o de **{regiao_extremo}** registrou a **rajada m√°xima de vento mais forte** ({valor_extremo:.2f} {unidade_var_extremo}) no per√≠odo.
                * **Impacto Potencial:** Ventos de alta velocidade podem causar **danos severos a edif√≠cios, √°rvores, redes el√©tricas e telecomunica√ß√µes**, levando a interrup√ß√µes e riscos √† seguran√ßa.
                * **Consequ√™ncia:** A necessidade de estruturas mais robustas e planos de resposta a emerg√™ncias para eventos de vento extremo torna-se evidente.
                """)
    else:
        st.info("N√£o foi poss√≠vel gerar insights sobre extremos. Ajuste seus filtros e tente novamente! üôÅ")

except FileNotFoundError:
    st.error(f"‚ùå **Erro:** O arquivo de dados '{caminho_arquivo_unificado}' n√£o foi encontrado. Por favor, verifique o caminho e a localiza√ß√£o do arquivo. üìÅ")
except KeyError as e:
    st.error(f"‚ö†Ô∏è **Erro de Coluna:** A coluna essencial '{e}' n√£o foi encontrada no arquivo CSV. Verifique se o seu arquivo cont√©m todos os dados necess√°rios para a an√°lise. üßê")
except Exception as e:
    st.error(f"üí• **Ocorreu um erro inesperado!** Parece que algo deu errado durante o processamento. Por favor, tente novamente. Detalhes t√©cnicos: `{e}` üêõ")

st.markdown("---")
st.markdown("‚ú® Qual outro aspecto do clima voc√™ gostaria de investigar mais a fundo? Sua curiosidade nos impulsiona! ‚ú®")
