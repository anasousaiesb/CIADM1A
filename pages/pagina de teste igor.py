import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st
import os
import numpy as np
from matplotlib.cm import get_cmap

# --- CONFIGURA√á√ïES INICIAIS DA P√ÅGINA ---
st.set_page_config(layout="wide", page_title="Extremos Clim√°ticos üö®")

# --- CSS para estiliza√ß√£o aprimorada do t√≠tulo e subt√≠tulo (mantido e aprimorado) ---
st.markdown("""
<style>
.stApp {
    background-color: #f0f2f5; /* Fundo cinza claro */
    color: #2C3E50; /* Cor de texto principal */
}
/* Estilos para o tema de "An√°lise de Extremos Clim√°ticos" */
.main-title-extreme { /* T√≠tulo principal dos extremos */
    font-size: 3.2em;
    font-weight: 700;
    color: #CC0000; /* Vermelho forte para extremos */
    text-align: center;
    margin-bottom: 0.5em;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
}
.subtitle-extreme { /* Subt√≠tulo dos extremos */
    font-size: 1.6em;
    color: #E65100; /* Laranja escuro */
    text-align: center;
    margin-top: -0.5em;
    margin-bottom: 1.5em;
}
.header-section-extreme { /* Se√ß√£o do cabe√ßalho dos extremos */
    background: linear-gradient(135deg, #FFD180 0%, #FFAB40 100%); /* Gradiente de laranja */
    padding: 1.8em;
    border-radius: 12px;
    margin-bottom: 2em;
    box-shadow: 0 6px 15px rgba(0,0,0,0.1);
    border: 1px solid #FF8F00;
}
/* Estilo para st.metric */
[data-testid="stMetricValue"] {
    font-size: 2.5em;
    font-weight: bold;
    color: #CC0000; /* Vermelho vibrante para o valor */
}
[data-testid="stMetricLabel"] {
    font-size: 1.2em;
    color: #E65100; /* Laranja para o r√≥tulo */
}
/* Estilo geral para cabe√ßalhos de se√ß√£o */
h2 {
    color: #34495E; /* Cor para subt√≠tulos h2 */
    font-weight: 600;
}
</style>
""", unsafe_allow_html=True)

# Caminho relativo ao arquivo CSV
caminho_arquivo_unificado = os.path.join("medias", "medias_mensais_geo_2020_2025.csv")

# --- FUN√á√ÉO PARA CARREGAR E PREPARAR OS DADOS (com caching) ---
@st.cache_data
def carregar_dados(caminho):
    """Carrega e processa o arquivo de dados clim√°ticos."""
    df = pd.read_csv(caminho)

    # Converte colunas para num√©rico, tratando erros
    for col in ['M√™s', 'Ano', 'PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)',
                'TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)',
                'TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)',
                'VENTO, RAJADA MAXIMA (m/s)',
                'RADIACAO GLOBAL (Kj/m¬≤)']: # Adicionado radia√ß√£o caso precise
        if col in df.columns:
            df[col] = pd.to_numeric(df[col], errors='coerce')
    
    df = df.dropna(subset=['M√™s', 'Ano']) # Garante que M√™s e Ano n√£o s√£o nulos
    return df

# --- CARREGAMENTO DOS DADOS E TRATAMENTO DE ERROS ---
try:
    df_unificado = carregar_dados(caminho_arquivo_unificado)

    # --- T√çTULO PRINCIPAL E SUBT√çTULO COM EMOJIS E ESTILO CUSTOMIZADO ---
    st.markdown('<div class="header-section-extreme">', unsafe_allow_html=True)
    st.markdown('<h1 class="main-title-extreme">An√°lise de Extremos Clim√°ticos Regionais do Brasil üö®‚ö†Ô∏è</h1>', unsafe_allow_html=True)
    st.markdown('<p class="subtitle-extreme">Descubra os Picos e Vales nos Dados Clim√°ticos (2020-2025) üå°Ô∏èüí®üåßÔ∏è</p>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)

    st.markdown("""
    Prepare-se para uma jornada pelos **recordes clim√°ticos** do Brasil! Esta ferramenta interativa
    permite que voc√™ identifique e visualize os **valores mais altos e mais baixos**
    de diversas vari√°veis clim√°ticas, como temperatura, precipita√ß√£o e rajadas de vento.
    Descubra quais regi√µes enfrentaram as condi√ß√µes mais **extremas** no per√≠odo de 2020 a 2025.
    """)

    # --- INTERFACE DO USU√ÅRIO NA BARRA LATERAL ---
    st.sidebar.header("Filtros de An√°lise ‚öôÔ∏è")
    
    regioes = sorted(df_unificado['Regiao'].unique())
    anos = sorted(df_unificado['Ano'].unique())

    # Dropdown para selecionar a vari√°vel de extremo
    variaveis_extremo = {
        'Temperatura M√°xima (¬∞C)': 'TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)',
        'Temperatura M√≠nima (¬∞C)': 'TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)',
        'Precipita√ß√£o Total (mm)': 'PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)',
        'Rajada M√°xima de Vento (m/s)': 'VENTO, RAJADA MAXIMA (m/s)'
        # 'Radia√ß√£o Global (Kj/m¬≤)': 'RADIACAO GLOBAL (Kj/m¬≤)' # Se quiser incluir radia√ß√£o
    }
    nome_var_extremo = st.sidebar.selectbox("Escolha a Vari√°vel de Extremo para Explorar:", list(variaveis_extremo.keys()))
    coluna_var_extremo = variaveis_extremo[nome_var_extremo]
    
    # Verifica se a coluna selecionada realmente existe no DataFrame
    if coluna_var_extremo not in df_unificado.columns:
        st.error(f"‚ùå **Erro:** A coluna '{coluna_var_extremo}' para a vari√°vel '{nome_var_extremo}' n√£o foi encontrada no seu arquivo CSV. Por favor, verifique os nomes das colunas. üõë")
        st.stop()

    unidade_var_extremo = nome_var_extremo.split('(')[-1].replace(')', '') if '(' in nome_var_extremo else ''

    # Slider para selecionar os anos
    ano_inicio, ano_fim = st.sidebar.select_slider(
        "Defina o Intervalo de Anos:",
        options=anos.astype(int),
        value=(int(min(anos)), int(max(anos)))
    )
    df_filtrado_ano = df_unificado[(df_unificado['Ano'] >= ano_inicio) & (df_unificado['Ano'] <= ano_fim)]

    st.markdown("---")

    # --- DESTAQUE DO EXTREMO GERAL (st.metric) ---
    st.subheader(f"üèÜ O Recorde Geral de {nome_var_extremo} no Per√≠odo Selecionado:")
    
    if "M√≠nima" in nome_var_extremo:
        overall_extreme_value = df_filtrado_ano[coluna_var_extremo].min()
        overall_extreme_row = df_filtrado_ano.loc[df_filtrado_ano[coluna_var_extremo].idxmin()]
        metric_label = f"M√≠nimo Hist√≥rico de {nome_var_extremo}"
    else:
        overall_extreme_value = df_filtrado_ano[coluna_var_extremo].max()
        overall_extreme_row = df_filtrado_ano.loc[df_filtrado_ano[coluna_var_extremo].idxmax()]
        metric_label = f"M√°ximo Hist√≥rico de {nome_var_extremo}"

    if not pd.isna(overall_extreme_value):
        st.metric(label=metric_label, value=f"{overall_extreme_value:.2f} {unidade_var_extremo}")
        st.info(f"Ocorreu em **{overall_extreme_row['Regiao']}** no m√™s {int(overall_extreme_row['M√™s'])} de {int(overall_extreme_row['Ano'])}.")
    else:
        st.info("N√£o foi poss√≠vel determinar o valor extremo geral para a sele√ß√£o atual. üôÅ")

    st.markdown("---")

    # --- AN√ÅLISE DE EXTREMOS CLIM√ÅTICOS POR REGI√ÉO ---
    st.header(f"Explorando os Extremos de {nome_var_extremo} por Regi√£o ({ano_inicio}-{ano_fim}) üìä")
    st.write(f"""
    A tabela e o gr√°fico abaixo revelam os **valores mais extremos** (m√°ximos ou m√≠nimos) registrados para
    **{nome_var_extremo.lower()}** em cada regi√£o do Brasil, dentro do per√≠odo de **{ano_inicio} a {ano_fim}**.
    Observe as varia√ß√µes e identifique as regi√µes que se destacam por suas condi√ß√µes clim√°ticas mais severas.
    """)

    # Agrupando por regi√£o para encontrar os valores extremos
    if "M√≠nima" in nome_var_extremo:
        df_extremos_regionais = df_filtrado_ano.groupby('Regiao')[coluna_var_extremo].min().reset_index()
        df_extremos_regionais = df_extremos_regionais.sort_values(by=coluna_var_extremo, ascending=True)
    else:
        df_extremos_regionais = df_filtrado_ano.groupby('Regiao')[coluna_var_extremo].max().reset_index()
        df_extremos_regionais = df_extremos_regionais.sort_values(by=coluna_var_extremo, ascending=False)

    if not df_extremos_regionais.empty:
        # Renomeando a coluna para melhor exibi√ß√£o
        df_extremos_regionais.rename(columns={coluna_var_extremo: f'{nome_var_extremo} Extremo'}, inplace=True)
        
        # Estiliza√ß√£o da tabela com destaque para valores extremos
        st.dataframe(df_extremos_regionais.set_index('Regiao').style.format("{:.2f}").background_gradient(cmap='YlOrRd' if "M√≠nima" not in nome_var_extremo else 'Blues_r'))

        # Gr√°fico de barras para os extremos
        fig_extremo, ax_extremo = plt.subplots(figsize=(12, 7)) # Aumentado um pouco a altura
        
        # Cores din√¢micas e mais vibrantes baseadas na vari√°vel
        if "Temperatura M√°xima" in nome_var_extremo:
            bar_color = '#E74C3C' # Vermelho intenso para calor extremo
        elif "Temperatura M√≠nima" in nome_var_extremo:
            bar_color = '#3498DB' # Azul profundo para frio extremo
        elif "Precipita√ß√£o Total" in nome_var_extremo:
            bar_color = '#2ECC71' # Verde vibrante para chuva
        elif "Rajada M√°xima de Vento" in nome_var_extremo:
            bar_color = '#9B59B6' # Roxo para vento
        else:
            bar_color = '#FF7043' # Cor padr√£o laranja/vermelho

        ax_extremo.bar(df_extremos_regionais['Regiao'], df_extremos_regionais[f'{nome_var_extremo} Extremo'], color=bar_color, alpha=0.9, edgecolor='black', linewidth=0.7)
        ax_extremo.set_title(f'Recordes de {nome_var_extremo} por Regi√£o ({ano_inicio}-{ano_fim})', fontsize=20, fontweight='bold', color='#34495E')
        ax_extremo.set_xlabel('Regi√£o', fontsize=15, color='#34495E')
        ax_extremo.set_ylabel(f'{nome_var_extremo} ({unidade_var_extremo})', fontsize=15, color='#34495E')
        ax_extremo.tick_params(axis='x', rotation=45, labelsize=12)
        ax_extremo.tick_params(axis='y', labelsize=12)
        ax_extremo.grid(axis='y', linestyle='--', alpha=0.7, color='#BDC3C7')
        ax_extremo.set_facecolor('#F8F9FA') # Fundo do gr√°fico
        plt.tight_layout()
        st.pyplot(fig_extremo)

        st.markdown("---")

        st.header("Insights e Hip√≥teses sobre Extremos Clim√°ticos ü§î")
        st.warning("üö® **Aten√ß√£o:** As an√°lises e hip√≥teses abaixo s√£o explorat√≥rias e baseadas em um per√≠odo de dados limitado (2020-2025). Para conclus√µes definitivas sobre mudan√ßas clim√°ticas e eventos extremos, s√£o necess√°rias s√©ries hist√≥ricas de dados muito mais longas e estudos aprofundados.")

        # --- Insights Din√¢micos dentro de Expanders ---
        if not df_extremos_regionais.empty:
            if "Temperatura M√°xima" in nome_var_extremo:
                top_region = df_extremos_regionais.iloc[0]
                with st.expander(f"‚ú® **Desvende o Recorde de Calor: {top_region['Regiao']}**"):
                    st.markdown(f"""
                    A Regi√£o de **{top_region['Regiao']}** foi a que registrou a **temperatura m√°xima mais alta** ({top_region[f'{nome_var_extremo} Extremo']:.2f} {unidade_var_extremo}) no per√≠odo selecionado.
                    * **Potencial Impacto:** Esse cen√°rio pode indicar que essa regi√£o est√° mais suscet√≠vel a **ondas de calor prolongadas e intensas**. Isso sobrecarrega os sistemas de sa√∫de, aumenta a demanda por energia para refrigera√ß√£o e impacta diretamente a produtividade na agricultura e no ambiente urbano.
                    * **O que significa?** Cidades e √°reas rurais podem precisar de estrat√©gias urgentes de adapta√ß√£o ao calor, como a expans√£o de √°reas verdes, melhorias na infraestrutura e sistemas de alerta de sa√∫de p√∫blica.
                    """)
            
            elif "Temperatura M√≠nima" in nome_var_extremo:
                top_region = df_extremos_regionais.iloc[0] # Para m√≠nima, a primeira √© a menor
                with st.expander(f"ü•∂ **Onde o Frio Atingiu seu Ponto Mais Baixo: {top_region['Regiao']}**"):
                    st.markdown(f"""
                    A Regi√£o de **{top_region['Regiao']}** alcan√ßou a **temperatura m√≠nima mais baixa** ({top_region[f'{nome_var_extremo} Extremo']:.2f} {unidade_var_extremo}) no per√≠odo.
                    * **Potencial Impacto:** Per√≠odos de frio extremo podem causar **perdas significativas na agricultura devido a geadas**, aumentar o consumo de energia para aquecimento e representar riscos graves √† sa√∫de de popula√ß√µes mais vulner√°veis.
                    * **O que significa?** √â fundamental que as regi√µes com esses recordes preparem suas lavouras e infraestruturas para proteger-se contra eventos de frio intenso e garantir o bem-estar de seus habitantes.
                    """)
            
            elif "Precipita√ß√£o Total" in nome_var_extremo:
                top_region = df_extremos_regionais.iloc[0]
                with st.expander(f"üåä **Recorde de Chuva: A For√ßa da √Ågua em {top_region['Regiao']}**"):
                    st.markdown(f"""
                    A Regi√£o de **{top_region['Regiao']}** registrou o **maior volume de precipita√ß√£o** ({top_region[f'{nome_var_extremo} Extremo']:.2f} {unidade_var_extremo}) em um √∫nico m√™s no per√≠odo analisado.
                    * **Potencial Impacto:** Volumes t√£o extremos de chuva elevam drasticamente o risco de **inunda√ß√µes repentinas, deslizamentos de terra e transbordamento de rios**, impactando severamente infraestruturas e a seguran√ßa da vida humana.
                    * **O que significa?** Planejamento urbano resiliente, sistemas de drenagem eficientes e alertas precoces √† popula√ß√£o s√£o cruciais para mitigar os riscos em √°reas suscet√≠veis a chuvas torrenciais.
                    """)
            
            elif "Rajada M√°xima de Vento" in nome_var_extremo:
                top_region = df_extremos_regionais.iloc[0]
                with st.expander(f"üí® **Onde o Vento Soprou Mais Forte: {top_region['Regiao']}**"):
                    st.markdown(f"""
                    A Regi√£o de **{top_region['Regiao']}** experimentou a **rajada m√°xima de vento mais forte** ({top_region[f'{nome_var_extremo} Extremo']:.2f} {unidade_var_extremo}) no per√≠odo.
                    * **Potencial Impacto:** Ventos de alta velocidade podem causar **danos severos a edifica√ß√µes, quedas de √°rvores, interrup√ß√µes em redes el√©tricas e de comunica√ß√£o**, e colocar a seguran√ßa p√∫blica em risco.
                    * **O que significa?** Regi√µes com esses registros necessitam de infraestrutura mais robusta e planos de conting√™ncia bem definidos para proteger bens e pessoas durante eventos de vento extremo.
                    """)

    else:
        st.info("N√£o h√° dados de extremos dispon√≠veis para a vari√°vel e o per√≠odo selecionados. üòî Tente ajustar os filtros para revelar mais informa√ß√µes!")

except FileNotFoundError:
    st.error(f"‚ùå **Erro Cr√≠tico:** O arquivo de dados '{caminho_arquivo_unificado}' n√£o foi encontrado. Por favor, verifique o caminho e a localiza√ß√£o do arquivo para continuar a an√°lise. üìÅ")
except KeyError as e:
    st.error(f"‚ö†Ô∏è **Erro de Coluna:** A coluna essencial '{e}' n√£o foi encontrada no seu arquivo CSV. Verifique se os nomes das colunas correspondem exatamente aos esperados. üßê")
except Exception as e:
    st.error(f"üí• **Ocorreu um erro inesperado!** Lamentamos, mas algo deu errado durante o processamento dos dados. Por favor, tente novamente ou entre em contato se o problema persistir. Detalhes t√©cnicos: `{e}` üêõ")

st.markdown("---")
st.markdown("‚ú® Esperamos que esta an√°lise dos extremos clim√°ticos tenha sido esclarecedora! Qual outro mist√©rio clim√°tico voc√™ gostaria de desvendar em seguida? Sua curiosidade √© o nosso combust√≠vel! ‚ú®")
