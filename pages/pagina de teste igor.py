import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st
import os
import numpy as np
from matplotlib.cm import get_cmap

# --- CONFIGURA√á√ïES DA P√ÅGINA ---
st.set_page_config(
    layout="wide",
    page_title="Clima Brasil: An√°lise Interativa (2020-2025) üáßüá∑",
    initial_sidebar_state="expanded",
    # Definindo um tema claro e cores principais
    # Isso pode ser feito via .streamlit/config.toml, mas para exemplo, faremos via CSS
)

# --- T√çTULO PRINCIPAL E INTRODU√á√ÉO ---
# Novo visual para o t√≠tulo principal com cor customizada
st.markdown("""
<style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@600;700&display=swap');
    body {
        font-family: 'Poppins', sans-serif;
    }
    .main-title {
        font-family: 'Poppins', sans-serif;
        font-weight: 700;
        font-size: 3.2em; /* Bigger title */
        color: #2c3e50; /* Darker blue-grey for main title */
        text-align: center;
        margin-bottom: 20px;
        text-shadow: 2px 2px 5px rgba(0,0,0,0.1);
    }
    .subtitle-text {
        font-size: 1.3em;
        font-weight: 600;
        color: #34495e; /* Slightly lighter blue-grey */
        text-align: center;
        margin-top: -10px;
        margin-bottom: 30px;
    }
    .section-header {
        font-family: 'Poppins', sans-serif;
        font-weight: 600;
        font-size: 2em;
        color: #2980b9; /* A vibrant blue for section headers */
        border-bottom: 3px solid #3498db;
        padding-bottom: 10px;
        margin-top: 40px;
        margin-bottom: 25px;
    }
    .stSelectbox label, .stMultiSelect label, .stRadio label {
        font-weight: bold;
        color: #2c3e50;
    }
    .stMarkdown h3 {
        color: #2980b9;
        font-weight: 600;
        font-size: 1.6em;
    }
    .stMarkdown h4 {
        color: #e67e22; /* Orange for sub-sub headers */
        font-weight: 600;
        font-size: 1.3em;
    }
    .stMarkdown p {
        font-size: 1.05em;
        line-height: 1.6;
        color: #34495e;
    }
    .stMarkdown ul li {
        font-size: 1em;
        line-height: 1.5;
        color: #34495e;
    }
</style>
""", unsafe_allow_html=True)


st.markdown("""
<p class="main-title">üåé Descobrindo o Clima do Brasil (2020-2025): Uma Jornada Interativa üìä</p>
<p class="subtitle-text">Explore os padr√µes clim√°ticos regionais e identifique tend√™ncias e anomalias nas temperaturas, precipita√ß√µes e radia√ß√£o solar.</p>
<p class="subtitle-text">Utilize os filtros na barra lateral para personalizar sua an√°lise e mergulhar nos dados.</p>
""", unsafe_allow_html=True)

st.markdown("---")

# Caminho relativo ao arquivo CSV
# Certifique-se de que o arquivo 'medias_mensais_geo_2020_2025.csv' est√° na pasta 'medias'
# Ex: seu_projeto/medias/medias_mensais_geo_2020_2025.csv
caminho_arquivo_unificado = os.path.join("medias", "medias_mensais_geo_2020_2025.csv")


# --- FUN√á√ÉO PARA CARREGAR E PREPARAR OS DADOS ---
@st.cache_data
def carregar_dados(caminho):
    """Carrega e processa o arquivo de dados clim√°ticos."""
    df = pd.read_csv(caminho)

    # Mapeamento de abrevia√ß√µes de regi√µes para nomes completos
    mapa_regioes = {
        "CO": "Centro-Oeste",
        "NE": "Nordeste",
        "N": "Norte",
        "S": "Sul",
        "SE": "Sudeste"
    }
    df['Regiao'] = df['Regiao'].map(mapa_regioes)
    
    # Calcular a Temperatura M√©dia se as colunas de max/min existirem
    if 'TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)' in df.columns and \
       'TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)' in df.columns:
        df['Temperatura M√©dia (¬∞C)'] = (
            df['TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)'] +
            df['TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)']
        ) / 2
    elif 'Temperatura M√©dia (¬∞C)' not in df.columns:
        # Se n√£o h√° como calcular e a coluna n√£o existe, levanta um erro
        raise KeyError("Coluna 'Temperatura M√©dia (¬∞C)' n√£o encontrada e n√£o p√¥de ser calculada.")

    # Renomear colunas para facilitar o acesso e apresenta√ß√£o
    df = df.rename(columns={
        'PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)': 'Precipita√ß√£o Total (mm)',
        'RADIACAO GLOBAL (Kj/m¬≤)': 'Radia√ß√£o Global (Kj/m¬≤)'
    })

    # Certificar-se de que as colunas 'M√™s' e 'Ano' s√£o num√©ricas
    df['M√™s'] = pd.to_numeric(df['M√™s'], errors='coerce')
    df['Ano'] = pd.to_numeric(df['Ano'], errors='coerce')
    df = df.dropna(subset=['M√™s', 'Ano']) # Remover linhas com M√™s ou Ano inv√°lidos
    return df

# --- CARREGAMENTO DOS DADOS E TRATAMENTO DE ERROS ---
try:
    df_unificado = carregar_dados(caminho_arquivo_unificado)
    
    # --- INTERFACE DO USU√ÅRIO (BARRA LATERAL) ---
    st.sidebar.header("‚öôÔ∏è Personalize sua An√°lise")
    st.sidebar.markdown("Selecione as op√ß√µes abaixo para filtrar os dados e visualizar diferentes aspectos do clima.")
    
    regioes = sorted(df_unificado['Regiao'].dropna().unique()) # Garante que regi√µes vazias n√£o apare√ßam
    todos_anos_disponiveis = sorted(df_unificado['Ano'].unique())
    meses = sorted(df_unificado['M√™s'].unique())

    # Sele√ß√£o interativa da vari√°vel clim√°tica
    variaveis = {
        'Temperatura M√©dia (¬∞C)': 'Temperatura M√©dia (¬∞C)',
        'Precipita√ß√£o Total (mm)': 'Precipita√ß√£o Total (mm)',
        'Radia√ß√£o Global (Kj/m¬≤)': 'Radia√ß√£o Global (Kj/m¬≤)'
    }
    
    # Define a vari√°vel padr√£o e garante que ela exista no dicion√°rio e nos dados
    default_var = 'Radia√ß√£o Global (Kj/m¬≤)'
    if default_var not in variaveis or variaveis[default_var] not in df_unificado.columns:
        default_var = 'Temperatura M√©dia (¬∞C)'
        if default_var not in variaveis or variaveis[default_var] not in df_unificado.columns:
            default_var = list(variaveis.keys())[0] # Fallback para a primeira vari√°vel dispon√≠vel

    default_var_index = list(variaveis.keys()).index(default_var)

    nome_var = st.sidebar.selectbox(
        "1. üå°Ô∏è Qual Vari√°vel Clim√°tica Voc√™ Quer Analisar?",
        list(variaveis.keys()),
        index=default_var_index,
        help="Escolha entre Temperatura M√©dia, Precipita√ß√£o Total ou Radia√ß√£o Global para a an√°lise."
    )
    coluna_var = variaveis[nome_var]
    unidade_var = nome_var.split('(')[-1].replace(')', '') if '(' in nome_var else ''

    # Sele√ß√£o interativa de anos para o gr√°fico facetado
    st.sidebar.markdown("---")
    anos_selecionados = st.sidebar.multiselect(
        "2. üìÖ Selecione os Anos para o Gr√°fico Mensal:",
        options=todos_anos_disponiveis,
        default=todos_anos_disponiveis, # Exibe todos por padr√£o
        help="Selecione um ou mais anos para comparar os padr√µes clim√°ticos mensais."
    )

    if not anos_selecionados:
        st.warning("‚ö†Ô∏è **Aten√ß√£o:** Por favor, selecione pelo menos um ano para visualizar os dados. Use o filtro na barra lateral.")
        st.stop()
        
    # --- VISUALIZA√á√ÉO PRINCIPAL (Gr√°fico Facetado Interativo) ---
    st.markdown(f"<h2 class='section-header'>üìà Padr√µes Mensais de **{nome_var}** por Regi√£o</h2>", unsafe_allow_html=True)
    st.markdown(f"""
    Esta se√ß√£o apresenta como a **{nome_var}** varia m√™s a m√™s em cada regi√£o do Brasil,
    para os anos **{', '.join(map(str, sorted(anos_selecionados)))}**.
    Observe as tend√™ncias sazonais e as diferen√ßas anuais!
    """)
    
    n_cols = 3 # N√∫mero de colunas para os subplots
    n_rows = int(np.ceil(len(regioes) / n_cols))
    
    # Ajustando figsize para melhor visualiza√ß√£o em telas wide
    fig, axes = plt.subplots(nrows=n_rows, ncols=n_cols, figsize=(6*n_cols, 5*n_rows), sharey=True, dpi=100)
    plt.style.use('seaborn-v0_8-pastel') # Estilo mais suave e moderno

    # Flatten axes if it's a 2D array, or ensure it's iterable if only one subplot
    if n_rows * n_cols > 1:
        axes = axes.flatten()
    elif len(regioes) == 1:
        axes = [axes] # Garante que axes seja sempre uma lista para itera√ß√£o

    # Cores para os anos (usando 'viridis' ou 'plasma' para um gradiente moderno)
    # 'tab20' √© bom para distin√ß√£o se houver muitos anos
    cmap_years = get_cmap('tab20')
    cores_anos = {ano: cmap_years(i % cmap_years.N) for i, ano in enumerate(todos_anos_disponiveis)}

    for i, regiao in enumerate(regioes):
        ax = axes[i]
        df_regiao = df_unificado[df_unificado['Regiao'] == regiao]
        
        # Plotar apenas os anos selecionados pelo usu√°rio
        for ano in anos_selecionados:
            df_ano_regiao = df_regiao[df_regiao['Ano'] == ano].groupby('M√™s')[coluna_var].mean().reindex(meses)
            if not df_ano_regiao.empty and df_ano_regiao.dropna().any(): # Verifica se h√° dados v√°lidos para plotar
                ax.plot(meses, df_ano_regiao.values, marker='o', linestyle='-', 
                        color=cores_anos.get(ano, 'gray'), label=str(int(ano)), linewidth=2.0, alpha=0.8)
        
        ax.set_title(f"üìç {regiao}", fontsize=16, fontweight='bold', color='#4a69bd') # Cor azul mais forte
        ax.set_xlabel('M√™s', fontsize=13, color='#555')
        
        if i % n_cols == 0: # Adicionar ylabel apenas na primeira coluna de cada linha
            ax.set_ylabel(f'{nome_var}\n({unidade_var})', fontsize=13, color='#555')
            
        ax.set_xticks(meses)
        ax.set_xticklabels([f'{m:02d}' for m in meses], fontsize=11)
        ax.tick_params(axis='y', labelsize=11)
        ax.grid(True, linestyle='--', alpha=0.6)
        ax.spines['top'].set_visible(False)
        ax.spines['right'].set_visible(False)

    # Remover subplots vazios, se houver
    for j in range(i + 1, len(axes)):
        fig.delaxes(axes[j])

    # Criar uma √∫nica legenda para todo o gr√°fico
    handles, labels = [], []
    # Usar um conjunto para garantir r√≥tulos √∫nicos
    unique_labels = set()
    for ax_item in fig.get_axes():
        if ax_item and ax_item.lines:
            for line in ax_item.lines:
                label = line.get_label()
                if label not in unique_labels and label != '_nolegend_':
                    handles.append(line)
                    labels.append(label)
                    unique_labels.add(label)
    
    # Ordenar a legenda pelos anos
    sorted_labels_handles = sorted(zip(labels, handles), key=lambda x: int(x[0]))
    sorted_labels = [label for label, handle in sorted_labels_handles]
    sorted_handles = [handle for label, handle in sorted_labels_handles]

    if sorted_handles and sorted_labels:
        fig.legend(sorted_handles, sorted_labels, title='Ano', loc='upper right', bbox_to_anchor=(1.0, 1.0),
                   fontsize=12, title_fontsize='14', frameon=True, fancybox=True, shadow=True, ncol=1)

    plt.tight_layout(rect=[0, 0, 0.98, 0.98]) # Ajusta para acomodar a legenda e o t√≠tulo
    st.pyplot(fig)

    # --- An√°lise e Insights ---
    st.markdown("---")
    st.markdown("<h2 class='section-header'>üí° Seus Insights Clim√°ticos: O Que os Dados Revelam?</h2>", unsafe_allow_html=True)
    st.markdown("""
    Este painel n√£o √© apenas um conjunto de gr√°ficos; √© uma **janela interativa** para o comportamento clim√°tico din√¢mico das regi√µes brasileiras.
    Use os filtros na barra lateral para moldar sua narrativa e descobrir padr√µes que podem ser cruciais para diversos setores,
    como agricultura, gest√£o de recursos h√≠dricos, planejamento urbano e muito mais!
    """)
    
    st.markdown("### üéØ Guiando Sua An√°lise Profunda:")
    st.markdown("""
    * **Padr√µes Sazonais Cl√°ssicos:** Observe como a linha de cada ano (e de cada vari√°vel) sobe e desce ao longo dos meses. Isso reflete as esta√ß√µes do ano e suas caracter√≠sticas clim√°ticas inerentes. Por exemplo, note os picos de chuva no ver√£o do Sudeste ou o per√≠odo mais seco no Centro-Oeste.
    * **Diferen√ßas Regionais Marcantes:** Compare os gr√°ficos entre as diferentes regi√µes. Qual regi√£o exibe a temperatura mais est√°vel durante o ano? Qual delas possui a maior amplitude na precipita√ß√£o? Essas distin√ß√µes s√£o fundamentalmente moldadas pela geografia √∫nica e pelos sistemas clim√°ticos atuantes em cada √°rea do Brasil.
    * **Variabilidade Interanual e Eventos Extremos:** Ao selecionar e comparar diferentes anos, preste aten√ß√£o em como um mesmo m√™s pode apresentar valores muito distintos entre um ano e outro. Isso √© a **variabilidade clim√°tica interanual**, e anos com desvios significativos podem indicar a ocorr√™ncia de fen√¥menos clim√°ticos not√°veis, como:
        * üî• **Ondas de Calor/Frio Incomuns:** Picos ou vales extremos de temperatura.
        * üíß **Secas Severas/Inunda√ß√µes:** Meses com precipita√ß√£o drasticamente abaixo ou muito acima da m√©dia hist√≥rica.
        * ‚òÄÔ∏è **Anomalias de Radia√ß√£o Solar:** Per√≠odos com incid√™ncia solar at√≠pica (excesso de sol resultando em mais calor e evapora√ß√£o, ou excesso de nebulosidade).
    """)
    
    st.markdown("### üí≠ Sua Tarefa:")
    st.markdown("""
    Ao explorar os dados, fa√ßa-se perguntas instigantes:
    * "*H√° algum ano que se destaca de forma inusitada em uma regi√£o espec√≠fica para a vari√°vel que estou analisando?*"
    * "*As tend√™ncias observadas em uma vari√°vel (ex: temperatura) parecem se correlacionar com as de outra (ex: precipita√ß√£o)?*"
    * "*O que esses padr√µes e desvios significam para a **sustentabilidade**, a **economia** e a **vida** nas regi√µes do Brasil?*"
    """)

    # --- An√°lise de Extremos de Radia√ß√£o (com emojis e melhor formata√ß√£o) ---
    if nome_var == 'Radia√ß√£o Global (Kj/m¬≤)':
        st.markdown("---")
        st.markdown("<h2 class='section-header'>‚ö° Foco Especial: An√°lise de Extremos de Radia√ß√£o Global</h2>", unsafe_allow_html=True)
        st.markdown("""
        A radia√ß√£o solar √© uma vari√°vel clim√°tica de **extrema import√¢ncia**. Ao focar nela, podemos identificar os momentos de maior e menor incid√™ncia solar,
        que s√£o cruciais para setores como **energia fotovoltaica**, **agricultura** e para entender **eventos de seca** ou **excessiva nebulosidade**.
        """)

        # Filtra apenas os anos selecionados para a an√°lise de extremos
        df_analise_extremos = df_unificado[df_unificado['Ano'].isin(anos_selecionados)]

        if coluna_var in df_analise_extremos.columns and not df_analise_extremos[coluna_var].empty and df_analise_extremos[coluna_var].max() > 0:
            # Identifica o maior valor de radia√ß√£o global
            idx_max = df_analise_extremos[coluna_var].idxmax()
            max_rad_data = df_analise_extremos.loc[idx_max]

            # Identifica o menor valor de radia√ß√£o global (apenas valores > 0 para evitar leituras de sensores off)
            # Garante que h√° valores v√°lidos antes de tentar min
            min_valid_df = df_analise_extremos[df_analise_extremos[coluna_var] > 0]
            
            if not min_valid_df.empty:
                min_valid_rad = min_valid_df[coluna_var].min()
                idx_min_valid = min_valid_df[min_valid_df[coluna_var] == min_valid_rad].index[0]
                min_rad_data = df_analise_extremos.loc[idx_min_valid]

                col_max, col_min = st.columns(2)

                with col_max:
                    st.markdown(f"""
                    <div style="background-color:#ffe0b2; padding: 25px; border-radius: 15px; box-shadow: 0 6px 12px rgba(0,0,0,0.15);">
                        <h4 style="color:#e65100;">‚òÄÔ∏è Raio de Sol Mais Intenso Registrado</h4>
                        <p style="font-size:1.15em; color:#424242;">O **maior valor** de Radia√ß√£o Global no per√≠odo selecionado foi de:</p>
                        <p style="font-size:1.8em; font-weight:bold; color:#f57c00; margin-top: 10px; margin-bottom: 10px;">{max_rad_data[coluna_var]:.2f} Kj/m¬≤</p>
                        <ul style="list-style-type: none; padding: 0;">
                            <li><span style="font-weight:bold; color:#333;">Regi√£o:</span> {max_rad_data['Regiao']}</li>
                            <li><span style="font-weight:bold; color:#333;">M√™s:</span> {int(max_rad_data['M√™s']):02d}</li>
                            <li><span style="font-weight:bold; color:#333;">Ano:</span> {int(max_rad_data['Ano'])}</li>
                        </ul>
                    </div>
                    """, unsafe_allow_html=True)

                with col_min:
                    st.markdown(f"""
                    <div style="background-color:#bbdefb; padding: 25px; border-radius: 15px; box-shadow: 0 6px 12px rgba(0,0,0,0.15);">
                        <h4 style="color:#0d47a1;">‚òÅÔ∏è Per√≠odo de Menos Luz Solar (Excluindo Zeros)</h4>
                        <p style="font-size:1.15em; color:#424242;">O **menor valor significativo** de Radia√ß√£o Global no per√≠odo selecionado foi de:</p>
                        <p style="font-size:1.8em; font-weight:bold; color:#1976d2; margin-top: 10px; margin-bottom: 10px;">{min_rad_data[coluna_var]:.2f} Kj/m¬≤</p>
                        <ul style="list-style-type: none; padding: 0;">
                            <li><span style="font-weight:bold; color:#333;">Regi√£o:</span> {min_rad_data['Regiao']}</li>
                            <li><span style="font-weight:bold; color:#333;">M√™s:</span> {int(min_rad_data['M√™s']):02d}</li>
                            <li><span style="font-weight:bold; color:#333;">Ano:</span> {int(min_rad_data['Ano'])}</li>
                        </ul>
                    </div>
                    """, unsafe_allow_html=True)
                
                st.markdown("""
                ### üåü Por Que Isso Importa? A Relev√¢ncia dos Extremos de Radia√ß√£o
                
                A compreens√£o desses extremos de radia√ß√£o √© **fundamental** para diversas aplica√ß√µes:
                
                * **Energia Solar:** Os picos de radia√ß√£o indicam as melhores condi√ß√µes para otimizar a gera√ß√£o de energia fotovoltaica, enquanto os vales apontam desafios que sistemas solares devem contornar.
                * **Agricultura e Biomas:** A radia√ß√£o afeta diretamente a fotoss√≠ntese (crescimento das plantas) e a evapotranspira√ß√£o, impactando diretamente a produtividade agr√≠cola e o balan√ßo h√≠drico natural dos ecossistemas.
                * **Clima e Ambiente:** Extremos de radia√ß√£o influenciam a temperatura do ar e do solo, a forma√ß√£o de nuvens e podem at√© ter um impacto na qualidade do ar, especialmente em grandes centros urbanos.
                
                Essas informa√ß√µes s√£o **poderosas ferramentas** para o planejamento de infraestrutura resiliente, o desenvolvimento de estrat√©gias agr√≠colas inteligentes e para a adapta√ß√£o estrat√©gica √†s mudan√ßas clim√°ticas em n√≠vel regional.
                """)
            else:
                 st.info("‚ÑπÔ∏è N√£o h√° dados de Radia√ß√£o Global significativos (>0) para os anos selecionados para realizar a an√°lise de extremos.")
        else:
            st.info("‚ÑπÔ∏è Dados de Radia√ß√£o Global n√£o dispon√≠veis ou insuficientes para uma an√°lise significativa de extremos para a vari√°vel selecionada e anos filtrados.")

except FileNotFoundError:
    st.error(f"‚ùå **Erro Cr√≠tico:** O arquivo de dados '{caminho_arquivo_unificado}' n√£o foi encontrado. Por favor, verifique o caminho e o nome do arquivo na pasta `medias`.")
    st.info("üí° **Dica:** Certifique-se de que o arquivo `medias_mensais_geo_2020_2025.csv` est√° localizado corretamente na pasta `medias` dentro do seu projeto.")
except KeyError as e:
    st.error(f"‚ùå **Erro de Dados:** A coluna esperada '{e}' n√£o foi encontrada no arquivo CSV ou n√£o p√¥de ser calculada. Verifique se o seu CSV possui as colunas esperadas para a vari√°vel selecionada ou para o c√°lculo da temperatura m√©dia.")
    st.info("üí° **Dica:** O arquivo CSV deve conter colunas como 'Regiao', 'Ano', 'M√™s', e, para temperatura m√©dia, 'TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)' e 'TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)' ou j√° ter uma coluna 'Temperatura M√©dia (¬∞C)'. As colunas de precipita√ß√£o e radia√ß√£o devem ser 'PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)' e 'RADIACAO GLOBAL (Kj/m¬≤)'.")
except Exception as e:
    st.error(f"üí• **Ops! Ocorreu um erro inesperado:** {e}")
    st.warning("üîÑ **Sugest√£o:** Tente recarregar a p√°gina. Se o problema persistir, pode ser um erro nos dados ou no script. Por favor, entre em contato com o desenvolvedor se necess√°rio.")

st.markdown("---")
st.markdown("""
<div style="text-align: center; color: #7f8c8d; font-size: 0.9em; margin-top: 30px;">
    Desenvolvido com üíô e dados abertos para o conhecimento clim√°tico. <br>
    [Ana Sophia e Igor Andrade] ¬© 2025
</div>
""", unsafe_allow_html=True)
