import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st
import os
import numpy as np # Importar numpy para c√°lculos num√©ricos

# --- CONFIGURA√á√ïES INICIAIS ---
st.set_page_config(layout="wide", page_title="M√©dias Mensais Regionais üìà")

# CSS para estiliza√ß√£o aprimorada do t√≠tulo e subt√≠tulo
st.markdown("""
<style>
.stApp {
    background-color: #f4f7fa; /* Fundo suave para o aplicativo */
}
.main-title-2 {
    font-size: 3.2em;
    font-weight: 700;
    color: #007BFF; /* Um azul vibrante */
    text-align: center;
    margin-bottom: 0.5em;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
}
.subtitle-2 {
    font-size: 1.6em;
    color: #1E90FF; /* Um azul um pouco mais claro */
    text-align: center;
    margin-top: -0.5em;
    margin-bottom: 1.5em;
}
.header-section-2 {
    background-color: #e0f2f7; /* Fundo levemente azul para a se√ß√£o de cabe√ßalho */
    padding: 1.5em;
    border-radius: 10px;
    margin-bottom: 2em;
    box-shadow: 0 4px 8px rgba(0,0,0,0.05);
}
</style>
""", unsafe_allow_html=True)

# Caminho relativo ao arquivo CSV dentro do projeto
caminho_arquivo_unificado = os.path.join("medias", "medias_mensais_geo_2020_2025.csv")

try:
    # Ler o arquivo unificado
    df_unificado = pd.read_csv(caminho_arquivo_unificado)

    # --- CALCULA A TEMPERATURA M√âDIA SE AS COLUNAS DE MAX/MIN EXISTIREM ---
    if 'TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)' in df_unificado.columns and \
       'TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)' in df_unificado.columns:
        df_unificado['Temp_Media'] = (
            df_unificado['TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)'] +
            df_unificado['TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)']
        ) / 2
    elif 'Temp_Media' not in df_unificado.columns: # Se n√£o tem max/min E n√£o tem Temp_Media, levanta erro
        st.error("Erro: O arquivo CSV n√£o cont√©m a coluna 'Temp_Media' nem as colunas 'TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C)' e 'TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)' para calcular a temperatura m√©dia.")
        st.stop() # Para a execu√ß√£o do script
    # --- FIM DO C√ÅLCULO DA TEMPERATURA M√âDIA ---

    # Certificar-se de que a coluna 'M√™s' √© num√©rica
    df_unificado['M√™s'] = pd.to_numeric(df_unificado['M√™s'], errors='coerce')
    df_unificado = df_unificado.dropna(subset=['M√™s'])

    # --- T√çTULO PRINCIPAL E SUBT√çTULO COM EMOJIS ---
    st.markdown('<div class="header-section-2">', unsafe_allow_html=True)
    st.markdown('<h1 class="main-title-2">M√©dias Mensais Regionais por Vari√°vel üìäüåç</h1>', unsafe_allow_html=True)
    st.markdown('<p class="subtitle-2">An√°lise Clim√°tica Detalhada (2020-2025) üìà</p>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)

    st.markdown("---")
    st.header("Selecione os Par√¢metros para An√°lise üßê")
    st.markdown("""
        Utilize os seletores abaixo para escolher a **regi√£o** e a **vari√°vel clim√°tica**
        que voc√™ deseja visualizar. O gr√°fico mostrar√° as tend√™ncias mensais ao longo dos anos
        para sua sele√ß√£o, al√©m de uma linha da m√©dia hist√≥rica.
        """)

    # Lista de regi√µes e anos √∫nicas
    regioes = sorted(df_unificado['Regiao'].unique())
    anos = sorted(df_unificado['Ano'].unique())
    meses = sorted(df_unificado['M√™s'].unique()) # Garante que os meses est√£o ordenados corretamente

    # Sele√ß√£o interativa da regi√£o
    regiao_selecionada = st.selectbox("Selecione a regi√£o para visualizar:", regioes)

    # Vari√°veis a serem plotadas
    variaveis = {
        'Temperatura M√©dia (¬∞C)': 'Temp_Media',
        'Precipita√ß√£o Total (mm)': 'PRECIPITA√á√ÉO TOTAL, HOR√ÅRIO (mm)',
        'Radia√ß√£o Global (Kj/m¬≤)': 'RADIACAO GLOBAL (Kj/m¬≤)'
    }

    # Sele√ß√£o interativa da vari√°vel
    nome_var = st.selectbox("Selecione a vari√°vel para visualizar:", list(variaveis.keys()))
    coluna_var = variaveis[nome_var]

    # Cores para os anos
    from matplotlib.cm import get_cmap
    cmap = get_cmap('viridis')
    cores_anos = {ano: cmap(i / len(anos)) for i, ano in enumerate(anos)}

    # Filtra o DataFrame para a regi√£o selecionada
    df_regiao = df_unificado[df_unificado['Regiao'] == regiao_selecionada]

    st.subheader(f"M√©dia Mensal de {nome_var} na Regi√£o {regiao_selecionada} (2020-2025) üìâ")
    st.markdown("""
        Este gr√°fico de linhas exibe a **m√©dia mensal da vari√°vel selecionada** para a regi√£o escolhida,
        com cada linha representando um ano diferente. A linha tracejada vermelha indica a
        **m√©dia hist√≥rica mensal** para toda a s√©rie temporal (2020-2025), permitindo uma
        compara√ß√£o visual r√°pida das varia√ß√µes anuais em rela√ß√£o ao padr√£o de longo prazo.
        """)
    fig, ax = plt.subplots(figsize=(10, 6)) # Aumentei um pouco o tamanho do gr√°fico

    # Dicion√°rio para armazenar os valores anuais m√©dios para an√°lise de desvio
    valores_anuais_por_mes = {}

    for ano in anos:
        df_ano_regiao = df_regiao[df_regiao['Ano'] == ano].groupby('M√™s')[coluna_var].mean().reindex(meses)
        if not df_ano_regiao.empty:
            ax.plot(meses, df_ano_regiao.values, marker='o', linestyle='-', color=cores_anos[ano], label=str(ano))
            valores_anuais_por_mes[ano] = df_ano_regiao.values
        else:
            valores_anuais_por_mes[ano] = np.full(len(meses), np.nan) # Preenche com NaN se n√£o houver dados

    # Calcula a m√©dia hist√≥rica mensal para a vari√°vel e regi√£o selecionadas
    # Converte o dicion√°rio para um DataFrame para facilitar o c√°lculo da m√©dia
    df_valores_anuais = pd.DataFrame(valores_anuais_por_mes, index=meses)
    media_historica_mensal = df_valores_anuais.mean(axis=1)

    # Adiciona a linha da m√©dia hist√≥rica ao gr√°fico
    ax.plot(meses, media_historica_mensal.values, linestyle='--', color='red', label='M√©dia Hist√≥rica (2020-2025)', linewidth=2)


    ax.set_title(f'M√©dia Mensal de {nome_var} - {regiao_selecionada} (2020-2025)')
    ax.set_xlabel('M√™s')
    ax.set_ylabel(nome_var)
    ax.set_xticks(meses)
    ax.grid(True)
    ax.legend(title='Ano')
    plt.tight_layout()
    st.pyplot(fig)

    # --- An√°lise de Variabilidade Anual ---
    st.markdown("---")
    st.subheader(f"An√°lise de Variabilidade Anual para {nome_var} na Regi√£o {regiao_selecionada} üî¨")
    st.markdown("""
        Esta se√ß√£o detalha o qu√£o at√≠pico cada ano foi em rela√ß√£o √† m√©dia hist√≥rica mensal para a vari√°vel e regi√£o selecionadas.
        Um **maior desvio m√©dio absoluto** indica que os valores daquele ano se afastaram mais do padr√£o usual para os respectivos meses.
        """)

    # Calcula o desvio absoluto m√©dio de cada ano em rela√ß√£o √† m√©dia hist√≥rica mensal
    desvios_absolutos_anuais = {}
    for ano in anos:
        # Pega os valores do ano, ignora NaNs se houver
        valores_ano = df_valores_anuais[ano].dropna()
        media_historica_correspondente = media_historica_mensal[~df_valores_anuais[ano].isna()]

        if not valores_ano.empty:
            # Calcula o desvio m√™s a m√™s e ent√£o a m√©dia dos desvios absolutos
            desvios = np.abs(valores_ano - media_historica_correspondente)
            desvios_absolutos_anuais[ano] = desvios.mean()
        else:
            desvios_absolutos_anuais[ano] = np.nan

    # Identifica o ano mais at√≠pico (maior desvio absoluto m√©dio)
    if desvios_absolutos_anuais:
        # Filtra NaNs para encontrar o m√°ximo
        desvios_validos = {k: v for k, v in desvios_absolutos_anuais.items() if not np.isnan(v)}
        if desvios_validos:
            ano_mais_atipico = max(desvios_validos, key=desvios_validos.get)
            maior_desvio = desvios_validos[ano_mais_atipico]
            
            # Extrair unidade da vari√°vel para exibir no texto
            unidade_var = nome_var.split('(')[1].split(')')[0] if '(' in nome_var else ''

            st.write(f"Na Regi√£o **{regiao_selecionada}**, para a vari√°vel **{nome_var}**: ")
            st.write(f"- O ano de **{ano_mais_atipico}** se destaca como o mais at√≠pico, com um desvio m√©dio de **{maior_desvio:.2f} {unidade_var}** em rela√ß√£o √† m√©dia hist√≥rica mensal (2020-2025).")
            st.write(f"*(Um desvio maior indica que os valores daquele ano se afastaram mais da m√©dia para os respectivos meses.)*")

            st.write("\n**Desvios m√©dios anuais em rela√ß√£o √† m√©dia hist√≥rica (quanto maior, mais at√≠pico):**")
            desvios_df = pd.DataFrame.from_dict(desvios_absolutos_anuais, orient='index', columns=['Desvio M√©dio Absoluto'])
            st.dataframe(desvios_df.sort_values(by='Desvio M√©dio Absoluto', ascending=False).round(2))

            st.markdown(f"**Implica√ß√µes:**")
            if nome_var == 'Temperatura M√©dia (¬∞C)':
                st.markdown("- **Temperaturas atipicamente altas:** Podem indicar ondas de calor, impactando a sa√∫de humana, agricultura (estresse h√≠drico), consumo de energia (ar-condicionado) e ecossistemas. Podem tamb√©m indicar uma tend√™ncia de aquecimento ou um evento clim√°tico an√¥malo como El Ni√±o/La Ni√±a intensos.")
                st.markdown("- **Temperaturas atipicamente baixas:** Podem indicar geadas (prejudiciais √† agricultura), maior demanda por aquecimento, e podem estar ligadas a massas de ar frio ou eventos clim√°ticos espec√≠ficos.")
            elif nome_var == 'Precipita√ß√£o Total (mm)':
                st.markdown("- **Precipita√ß√£o atipicamente alta:** Pode causar inunda√ß√µes, deslizamentos de terra, perdas agr√≠colas (colheitas danificadas), e sobrecarga em infraestruturas de saneamento. Beneficia reservat√≥rios, mas de forma descontrolada pode ser destrutiva.")
                st.markdown("- **Precipita√ß√£o atipicamente baixa:** Pode levar a secas, escassez h√≠drica (impactando abastecimento e energia hidrel√©trica), inc√™ndios florestais e perdas significativas na agricultura e pecu√°ria. Pode indicar uma situa√ß√£o de estiagem prolongada.")
            elif nome_var == 'Radia√ß√£o Global (Kj/m¬≤)':
                st.markdown("- **Radia√ß√£o atipicamente alta:** Pode beneficiar a gera√ß√£o de energia solar, mas tamb√©m pode indicar dias com menos cobertura de nuvens, possivelmente associados a per√≠odos de seca ou temperaturas elevadas. Importante para o balan√ßo energ√©tico da superf√≠cie.")
                st.markdown("- **Radia√ß√£o atipicamente baixa:** Sugere maior nebulosidade ou menor insola√ß√£o, o que pode impactar a produtividade de culturas que dependem de luz e a efici√™ncia de sistemas solares. Pode estar ligada a per√≠odos chuvosos ou de maior cobertura de nuvens.")
        else:
            st.write("Dados insuficientes para calcular desvios para todos os anos.")
    else:
        st.write("N√£o h√° dados suficientes para realizar a an√°lise de variabilidade anual.")

except FileNotFoundError:
    st.error(f"Erro: O arquivo '{caminho_arquivo_unificado}' n√£o foi encontrado.")
except KeyError as e:
    st.error(f"Erro: A coluna '{e}' n√£o foi encontrada no arquivo CSV. Por favor, verifique se o seu CSV possui as colunas esperadas para a vari√°vel selecionada ou para o c√°lculo da temperatura m√©dia (TEMPERATURA M√ÅXIMA NA HORA ANT. (AUT) (¬∞C) e TEMPERATURA M√çNIMA NA HORA ANT. (AUT) (¬∞C)).")
except Exception as e:
    st.error(f"Ocorreu um erro ao gerar os gr√°ficos: {e}")
